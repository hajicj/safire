[_info]
name='test_complex_config'

[_loader]
_class=safire.data.loaders.MultimodalShardedDatasetLoader
root='test-data/'
name='test-data'

[_builder]
save=True
save_every=False
savename=_loader.pipeline_name(_info.name)
log_blocks=False
log_saving=False
_import=safire.data.composite_corpus.CompositeCorpus

[_assembly]
_1_=vtcorp
_2_=tfidf_normalized[_1_]
_3_=tfidf_unnormalized[_1_]
_4_=CompositeCorpus((_1_, _2_, _3_), names=('T_raw', 'T_N', 'T_nN'), aligned=True)
_5_=text_flatten[_4_]
#_6_=t_serializer[_5_]
#_6_=_5_
_7_=icorp
_8_=i_serializer[_7_]
_9_=CompositeCorpus((_1_, _8_), names=('txt', 'img'), aligned=False)
_10_=CompositeCorpus((_5_, _8_), names=('txt', 'img'), aligned=False)
_11_=mm_flatten[_10_]
_12_=introspection[_11_]

[_persistence]
loader=_loader
_1_=vtcorp
#_6_=text_composite
_8_=images
_12_=introspection

[simple_writer]
_class=safire.introspection.writers.HtmlVocabularyWriter
root=_loader.root
prefix=_loader.layout.name + '.tfidf'
top_k=100
min_freq=0.001

[text_writer]
_class=safire.introspection.writers.HtmlStructuredFlattenedWriter
_dependencies=simple_writer
_access_deps=simple_writer:text_writer.writers[0]
root=_loader.root
writers=(simple_writer, simple_writer, simple_writer)

[img_writer]
_class=safire.introspection.writers.HtmlImageWriter
root=os.path.join(_loader.root, _loader.layout.img_dir)

[mm_writer]
_class=safire.introspection.writers.HtmlStructuredFlattenedWriter
_dependencies=text_writer,img_writer
_access_deps=text_writer:mm_writer.writers[0]|img_writer:mm_writer.writers[1]
root=_loader.root
writers=(text_writer, img_writer)

[introspection]
_class=safire.introspection.interfaces.IntrospectionTransformer
_dependencies=mm_writer
_access_deps=mm_writer:introspection.writer
writer=mm_writer
corpus=_11_

[mm_flatten]
_import=safire.utils.transcorp.compute_docname_flatten_mapping
_class=safire.datasets.transformations.FlattenComposite
composite=_10_
structured=True
indexes=compute_docname_flatten_mapping(_9_, os.path.join(_loader.root, _loader.layout.textdoc2imdoc))

[i_serializer]
_import=safire.data.sharded_corpus.ShardedCorpus
_class=safire.data.serializer.Serializer
corpus=_7_
serializer_class=ShardedCorpus
fname=_loader.pipeline_serialization_target('.image_data')
overwrite=True

[icorp]
_class=safire.data.imagenetcorpus.ImagenetCorpus
input=os.path.join(_loader.root, _loader.layout.image_vectors)
delimiter=';'
dim=4096

[t_serializer]
_import=safire.data.sharded_corpus.ShardedCorpus
_class=safire.data.serializer.Serializer
corpus=_5_
serializer_class=ShardedCorpus
fname=_loader.pipeline_serialization_target('.flattened_various_tfidf')
overwrite=True
gensim_serialization=True

[text_flatten]
_class=safire.datasets.transformations.FlattenComposite
composite=_4_
structured=True
indexes=None

[tokenfilter]
_class=safire.data.filters.positionaltagfilter.PositionalTagTokenFilter
values=['N', 'A', 'V']
t_position=0

[vtcorp]
_class=safire.data.vtextcorpus.VTextCorpus
_label=NAV.pf0.3.pff.fc
_dependencies=tokenfilter
_access_deps=tokenfilter:vtcorp.tokenfilter
input_root=_loader.root
input=os.path.join(_loader.root, _loader.layout.vtlist)
token_filter=tokenfilter
pfilter=0.2
pfilter_full_freqs=True
filter_capital=True
precompute_vtlist=True

[tfidf_normalized]
_class=safire.utils.transformers.TfidfModel
_label='tfidf'
corpus=_1_
normalize=True

[tfidf_unnormalized]
_class=safire.utils.transformers.TfidfModel
_label='tfidf'
corpus=_1_
normalize=False



